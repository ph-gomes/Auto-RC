#ifndef GPS_H
#define GPS_H

#include <ros/ros.h>
#include <string>
#include <stdlib.h>
#include <iostream>

//#include <geometry_msgs/Pose2D.h>
#include <geometry_msgs/PoseArray.h>
#include <image_transport/image_transport.h>

#include <cv_bridge/cv_bridge.h>
#include <opencv2/highgui/highgui.hpp>
#include <opencv2/imgproc/imgproc.hpp>

#include <boost/thread.hpp>

class TrajectoryGeneration
{
private:
    	    
    	image_transport::Subscriber image_sub;
	ros::Publisher poseArray_pub;
    	ros::NodeHandle *rosNode;
	
	std::vector<cv::Point2d> points;
	geometry_msgs::PoseArray path;

	cv::Mat g_last_image;	
	boost::mutex g_image_mutex;
	std::string g_window_name;
	
	void image_receive(const sensor_msgs::ImageConstPtr& msg);
	void image_processing(const cv::Mat &image);
	void imageShow(const cv::Mat &image);
	void onMouse(int event, int x, int y, int flag);	
	static void onMouse(int event, int x, int y, int flag, void* userdata);

public:
    TrajectoryGeneration(ros::NodeHandle *rosNode_);
    ~TrajectoryGeneration();
    
    

};



#endif // GPS_H
